// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  name       String
  password   String
  avatar     String?
  role       Role     @default(USER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  //relation
  account     Account[]
}

// ================= Account ==================

model Account {
  id           Int @id @default(autoincrement())
  userId       String
  address      String
  username     String
  telephone    String

  // relation
  user         User @relation(fields: [userId], references: [id] )
  orderDetails OrderDetail[]  
}

model Items {
  id           Int      @id @default(autoincrement())
  id_category  Int   
  name         String
  slug         String
  src          String?
  price        Int
  address      String
  position     Position @relation(fields: [positionId], references: [id])
  description  String  @db.VarChar(255)
  positionId   Int

  //relation
  cart         Cart[]
}

model Position {
  id    Int    @id @default(autoincrement())
  lat   Float
  lng   Float
  items Items[]
}


enum Role {
  USER
  ADMIN
}

// ==================== cart =================== // 

model Cart {
  id              Int @id @default(autoincrement())
  itemsId         Int
  quantity        Int
  totalprice      Int
  createdAt       DateTime @default(now())

  //relations
  item            Items @relation(fields: [itemsId], references: [id])
  orders          OrderCart[]
  orderDetails    OrderDetail[]
}

// ==================== Order and Transaction ==================== //

model OrderCart {
  id              Int @id @default(autoincrement())
  cartId          Int
  shipment_status String
  createdAt       DateTime @default(now())

  //relations
  cart            Cart @relation(fields: [cartId], references: [id])
  orderDetails    OrderDetail[]
}

model OrderDetail {
  id              Int @id @default(autoincrement())
  cartId          Int
  orderId         Int
  accountId       Int

  //relations
  cart            Cart @relation(fields: [cartId], references: [id])
  orders          OrderCart @relation(fields: [orderId], references: [id])
  account         Account @relation(fields: [accountId], references: [id])
}